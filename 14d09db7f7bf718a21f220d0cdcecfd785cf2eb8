{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba97b9f_2be6a7b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-15T18:45:46Z",
      "side": 1,
      "message": "I believe this needs to be fixed in the CI job definition of the ai-code-review plugin, as the version should not be in the jar name.",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03cefa8_638bc373",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:12:38Z",
      "side": 1,
      "message": "I do not believe this to be true, all of the current maven builds, build correctly witht the version number on the end - its part of the maven standard build process.  E.g. look at the current github maven build which works.  The only reason that it works, is that you are looking for the first hyphen, actually the jars are called github-plugin-\u003cversion\u003e.jar and github-oauth-\u003cversion\u003e.jar.\n\nhttps://gerrit-ci.gerritforge.com/view/Plugins-stable-3.9/job/plugin-github-mvn-stable-3.9/\n\nAs such I want a simple change that works with all of the current maven builds without changing all of the current maven builds.  I believe it would be incorrect to prevent normal maven behaviour, simply to allow this bug in the fixMavenName method to continue.\n\nThe alternative would be to name the ai-code-review plugin to ai_code_review but again, I think this wouldn\u0027t be correct.\n\nI believe the suggested fix, applies to all maven builds equally and fixes them using the simplest approach which is falling back to the available reponame which is in a more predictable naming convention and has no version number.",
      "parentUuid": "3ba97b9f_2be6a7b8",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0964de41_79af7c7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:25:42Z",
      "side": 1,
      "message": "Ideally I think we could have added a new field \"e.g. name\" just like how we obtain the \"description\" from the google repository build url and therefore build name.\nTo be honest even the repo name looks to be what is u sed e.g. github as its useful when grouping more than one jar to a common name e.g. github-plugin and github-oauth dont appear as 2 assets, they appear as one grouped by the repo name. \n\nAs I wanted to reduce the risk here, I kept the previous split logic and use it in most csaes and as all fallbacks conditions, with the only exception being for more complex named hyphenated repos / plugins.",
      "parentUuid": "d03cefa8_638bc373",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c55ea000_42802b3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:32:40Z",
      "side": 1,
      "message": "Finally, I tried lucas suggesting by passing in the build information locally, removing the \"version\" from the name.\nUnfortunately we end up with another incorrecly named plugin, with the same issue, as its then called \"ai-code\" and not \"ai-code-review\".",
      "parentUuid": "0964de41_79af7c7e",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d30853e2_4564a38e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-20T07:52:01Z",
      "side": 1,
      "message": "The Change 77701 is the culprit, and yes, the fix I made 9 years ago for adjusting maven plugin names was too simplistic. Why not simply using the last index of `-` in https://gerrit-review.googlesource.com/c/plugins/plugin-manager/+/77701/comment/c237a121_0a0f3fd0/? It should be really a one-liner change.",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e85e576_19ceb6ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-20T15:00:07Z",
      "side": 1,
      "message": "I could do that, and it was my initial thought.\nBut when checking there are maven builds that have hypens in the name look at these examples:\nhttps://gerrit-ci.gerritforge.com/job/plugin-github-mvn-stable-3.9/\nhttps://gerrit-ci.gerritforge.com/job/plugin-github-mvn-stable-3.10/\n\ne.g. \ngithub-oauth-3.10.0-rc3.jar\ngithub-plugin-3.10.0-rc3.jar\n\nThis presented 2 issues.\n1) Using the last hyphen did not work when the version info had any hypenated suffix, which we see quite often as \"\u003cversion\u003e-rc1\" etc.  I do see this used a lot on different plugins.\n\n2) Take the last hyphen for the github plugins even if there was no -rcX suffix, isn\u0027t correct and would actually change the names presented to 2 different names. as there are 2 different plugin jars.\nOne github-oauth and one github-plugin, but luckily the repository name is github.\n\nAs such my fix was to reduce risk, and leave \"github\" assets as a single item on the list which correctly installs  both of the assets. \n\nMaybe the github install should have 2 options appear, one as github-plugin and another as github-auth, but I decided to leave this untouched to reduce the impact of this change.",
      "parentUuid": "d30853e2_4564a38e",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60e305b6_6642ab19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-21T14:00:13Z",
      "side": 1,
      "message": "I can add some tests with the \u003cplugin\u003e-1.0.0-rc0 type issue, and showing my fix works if you want to the test cases.   Is there anyone else that I should add to this review to get more eyes on it?",
      "parentUuid": "7e85e576_19ceb6ac",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f71134_abcd3b31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-21T14:26:27Z",
      "side": 1,
      "message": "\u003e Finally, I tried lucas suggesting by passing in the build information locally, removing the \"version\" from the name.\n\u003e Unfortunately we end up with another incorrecly named plugin, with the same issue, as its then called \"ai-code\" and not \"ai-code-review\".\n\nThe GitHub plugin isn\u0027t built with Maven anymore. Can you point to the other incorrectly named plugin by just removing the version from the artifact name?",
      "parentUuid": "c55ea000_42802b3d",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6937b134_239d6d03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-22T12:14:05Z",
      "side": 1,
      "message": "There was an issue on the old branches of the github plugin (stable-3.9 and stable-3.10) and I\u0027ve fixed them.\n\nAny other example?",
      "parentUuid": "80f71134_abcd3b31",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "903f4a8d_6e229660",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-22T13:49:08Z",
      "side": 1,
      "message": "I then went to master branches, assuming that is where current work is being performed and found this list. \n\nnow 2 of them aren\u0027t passing so I can\u0027t see the versioning, but I will check them locally, fixing the build issue and show the results below:\n\nhttps://gerrit-ci.gerritforge.com/view/Plugins-master/job/plugin-maintainer-mvn-master/\nhttps://gerrit-ci.gerritforge.com/view/Plugins-master/job/plugin-manifest-subscription-mvn-master/\nhttps://gerrit-ci.gerritforge.com/view/Plugins-master/job/plugin-ai-code-review-mvn-master/\n\n\nSo lets looks at the assets produced by these 2:\nai-code-review - target/ai-code-review-3.12.0.jar \nmanifest-subscription \u003d  target/manifest-subscription-3.0.jar\nmaintainer - target/maintainer-plugin-2.14-SNAPSHOT\n\nSo we have a mix of issues, \nUsing existing bugged code:\nai-code-review is incorrectly called \"ai\"\nmanifest-subscription is called \"manifest\"\nmaintainer is called \"maintainer\"\n\n\nSo if we try to move to dropping the version from the builds on their own no plugin manager changes.\n\nai-code-review is incorrectly called \"ai\", incorrect still. \nmanifest-subscription is called \"manifest\", incorrect still. \nmaintainer is called \"maintainer\", no problem.\n\nOK so what if we changed to use lastIndexOf and drop version, well that doesn\u0027t work for all either. \n\ne.g. manifest-plugin.\nThe asset on disk is called \"manifest-plugin-\u003cversion\u003e, so if we dropped the version, we would start calling it \"manifest-plugin\" a change in naming, whereas it was called \"manifest\" and so was the repo\" \n\nMy code still calls this asset \"manifest\" as it should be. \n\n\nI have explained the problems above which can happen any maven build, which I tried to protect against.\n\nSo as I see it, I am trying to protect and keep:\n1) Default maven behaviour  ( version numbers in assets )\n2) Hyphens in version numbers ( like -SNAPSHOT, or -rc1 etc )\n3) Multiple jar assets, how to group them by a single name.\n\nA final note - The maven plugin archetype generates the assets with the version in the name as per default maven behaviour so any change to maven default versioning in our plugins, should be pushed back to the example plugin archetype. \n\nThe new logic keeps the items whether they are one asset, or multiple as a single install link in the plugin manager.  It will also leave the maven plugins generated by the archetype working out of the box. \n\n\nI could change the code to only use my new REGEx, which works for all cases, and if we do that, if anyone wants to change how the plugin appears in the plugin manager they just change the job name and how it appears in the view, this is the approach currently used for the repository \"description\" field.\nTo be honest I am not sure why we didn\u0027t use the \"name\" from day one, as it is inline with the other asset information being used, and doesn\u0027t push back any requirements onto people writing plugins for gerrit. \n\nLet me know what you think I should do here. Personally I like the new test cases and better protection against us seeing breaks in the future as well as the ability to back port this fix to previous broken versions easily without pushing any other changes anywhere else.",
      "parentUuid": "80f71134_abcd3b31",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2892bbe4_156a149f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-22T13:57:04Z",
      "side": 1,
      "message": "So I have seen the fixes for github, which have 2 assets now.\n\ntarget/github-oauth-3.10.3.jar\ntarget/github-plugin-3.10.3.jar\n\nThe name is currently github for this plugin, as it has more than one asset, it seems correct to have it grouped by the repository name \"github\"\n\ntarget/ai-code-review-3.10.0.jar\n\nLast hyphen will called it correctly \"ai-code-review\", but for all maven plugins we must agree to never use -SNAPSHOT, or -RC type conventions in the version number. \n\n\nSo if we take the last hyphen it works for ai-code-review just fine as there is only one asset, but this doesn\u0027t work for the github assets, as you end up with 2 names, github-plugin, and github-auth?  \n\nWhat is you suggestion on the fix with these 2 3.10 plugins with this in mind.\n\nThanks for your replies on this topic.",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}