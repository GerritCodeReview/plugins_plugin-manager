{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba97b9f_2be6a7b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-15T18:45:46Z",
      "side": 1,
      "message": "I believe this needs to be fixed in the CI job definition of the ai-code-review plugin, as the version should not be in the jar name.",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03cefa8_638bc373",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:12:38Z",
      "side": 1,
      "message": "I do not believe this to be true, all of the current maven builds, build correctly witht the version number on the end - its part of the maven standard build process.  E.g. look at the current github maven build which works.  The only reason that it works, is that you are looking for the first hyphen, actually the jars are called github-plugin-\u003cversion\u003e.jar and github-oauth-\u003cversion\u003e.jar.\n\nhttps://gerrit-ci.gerritforge.com/view/Plugins-stable-3.9/job/plugin-github-mvn-stable-3.9/\n\nAs such I want a simple change that works with all of the current maven builds without changing all of the current maven builds.  I believe it would be incorrect to prevent normal maven behaviour, simply to allow this bug in the fixMavenName method to continue.\n\nThe alternative would be to name the ai-code-review plugin to ai_code_review but again, I think this wouldn\u0027t be correct.\n\nI believe the suggested fix, applies to all maven builds equally and fixes them using the simplest approach which is falling back to the available reponame which is in a more predictable naming convention and has no version number.",
      "parentUuid": "3ba97b9f_2be6a7b8",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0964de41_79af7c7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:25:42Z",
      "side": 1,
      "message": "Ideally I think we could have added a new field \"e.g. name\" just like how we obtain the \"description\" from the google repository build url and therefore build name.\nTo be honest even the repo name looks to be what is u sed e.g. github as its useful when grouping more than one jar to a common name e.g. github-plugin and github-oauth dont appear as 2 assets, they appear as one grouped by the repo name. \n\nAs I wanted to reduce the risk here, I kept the previous split logic and use it in most csaes and as all fallbacks conditions, with the only exception being for more complex named hyphenated repos / plugins.",
      "parentUuid": "d03cefa8_638bc373",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c55ea000_42802b3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-19T14:32:40Z",
      "side": 1,
      "message": "Finally, I tried lucas suggesting by passing in the build information locally, removing the \"version\" from the name.\nUnfortunately we end up with another incorrecly named plugin, with the same issue, as its then called \"ai-code\" and not \"ai-code-review\".",
      "parentUuid": "0964de41_79af7c7e",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d30853e2_4564a38e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-20T07:52:01Z",
      "side": 1,
      "message": "The Change 77701 is the culprit, and yes, the fix I made 9 years ago for adjusting maven plugin names was too simplistic. Why not simply using the last index of `-` in https://gerrit-review.googlesource.com/c/plugins/plugin-manager/+/77701/comment/c237a121_0a0f3fd0/? It should be really a one-liner change.",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e85e576_19ceb6ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-20T15:00:07Z",
      "side": 1,
      "message": "I could do that, and it was my initial thought.\nBut when checking there are maven builds that have hypens in the name look at these examples:\nhttps://gerrit-ci.gerritforge.com/job/plugin-github-mvn-stable-3.9/\nhttps://gerrit-ci.gerritforge.com/job/plugin-github-mvn-stable-3.10/\n\ne.g. \ngithub-oauth-3.10.0-rc3.jar\ngithub-plugin-3.10.0-rc3.jar\n\nThis presented 2 issues.\n1) Using the last hyphen did not work when the version info had any hypenated suffix, which we see quite often as \"\u003cversion\u003e-rc1\" etc.  I do see this used a lot on different plugins.\n\n2) Take the last hyphen for the github plugins even if there was no -rcX suffix, isn\u0027t correct and would actually change the names presented to 2 different names. as there are 2 different plugin jars.\nOne github-oauth and one github-plugin, but luckily the repository name is github.\n\nAs such my fix was to reduce risk, and leave \"github\" assets as a single item on the list which correctly installs  both of the assets. \n\nMaybe the github install should have 2 options appear, one as github-plugin and another as github-auth, but I decided to leave this untouched to reduce the impact of this change.",
      "parentUuid": "d30853e2_4564a38e",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60e305b6_6642ab19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1063455
      },
      "writtenOn": "2025-05-21T14:00:13Z",
      "side": 1,
      "message": "I can add some tests with the \u003cplugin\u003e-1.0.0-rc0 type issue, and showing my fix works if you want to the test cases.   Is there anyone else that I should add to this review to get more eyes on it?",
      "parentUuid": "7e85e576_19ceb6ac",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f71134_abcd3b31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-05-21T14:26:27Z",
      "side": 1,
      "message": "\u003e Finally, I tried lucas suggesting by passing in the build information locally, removing the \"version\" from the name.\n\u003e Unfortunately we end up with another incorrecly named plugin, with the same issue, as its then called \"ai-code\" and not \"ai-code-review\".\n\nThe GitHub plugin isn\u0027t built with Maven anymore. Can you point to the other incorrectly named plugin by just removing the version from the artifact name?",
      "parentUuid": "c55ea000_42802b3d",
      "revId": "14d09db7f7bf718a21f220d0cdcecfd785cf2eb8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}